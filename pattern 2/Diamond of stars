/*Problem statement
Print the following pattern for the given number of rows.

Note: N is always odd.


Pattern for N = 5



The dots represent spaces.




Detailed explanation ( Input/output format, Notes, Images )
Constraints :
1 <= N <= 49
Sample Input 1:
5
Sample Output 1:
  *
 ***
*****
 ***
  *
Sample Input 2:
3
Sample Output 2:
  *
 ***
  *
*/

import java.util.Scanner;
public class Solution {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n= s.nextInt();
        int n1 = (n+1)/2;
        int n2 = n1-1;
       // Top half of the diamond
       for (int i = 1; i <= n1; i ++) {
           for (int j = 1; j <= n1 - i; j++) {
               System.out.print(" ");
           }

           for (int j = 1; j <= 2*i-1; j++) {
               System.out.print("*");
           }

           System.out.println();
       }

        // Bottom half of the diamond (excluding the center row)
        for (int i = n2; i<=1; i--) {
            for (int j = n2-i+1; j<=1; j--) {
                System.out.print(" ");
            }

            for (int j = 2*i-1; j>=1; j--) {
                System.out.print("*");
            }

            System.out.println();
        }
        System.out.println();
    }
}
